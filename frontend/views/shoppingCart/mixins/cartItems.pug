-
  function formatGivenNumber(number, currency){
    let ar = number.toString().split('');
    if(ar.length ===1) ar.splice(ar.length -2, 0, '0');
    ar.splice(ar.length -2, 0, '.');
    if(ar.length > 6){
      for(let i = 6; i < ar.length; i+=4){
        ar.splice(ar.length-i, 0, ' ');
      }
    }
    st = ar.join('');
    return currency + ' ' + st;
  }

-
  function getRandomInt(max) {
    return Math.floor(Math.random() * Math.floor(max));
  }

-  
  function hyperbole(){
    let omg = [
      'A beautiful', 
      'An attractive', 
      'A pleasing',  
      'A charming',
      'A distinctive',
      'A',
      'A',
      'A',
      'A',
      'A',
      'A',
      'A',
      'A',
    ];
    return omg[getRandomInt(omg.length-1)];
  }
  
mixin normal(fullData, i)
  -
  -
  -let item = fullData.items[0];
  -let count = fullData.count;
  -let name = (item.name) ? item.name.toLowerCase() : 'item without a name';
  -let alt = hyperbole() + ' ' + name.toLowerCase() + ' with the ' + item.theme.name + ' design';
  -let sentence = ' with the ' + item.theme.name + ' design';
  -let itemdesc = (name.match(/\(/)) ? name.slice(0, name.match(/\(/).index-1) + 's ' + name.slice(name.match(/\(/).index)  + sentence : name.toLowerCase() + 's' + sentence;
  -let multiple = count + ' ' +  itemdesc;
  -let producer = (item.producer) ? item.producer.name : "One of our artists"
    
      if count > 1
        -let multiPrice = item.price * count;
        -totalPrice += multiPrice;
        p. 
          #{multiple}
          by various artists for: #[b #{formatGivenNumber(multiPrice, 'EUR')}] 
          #[em Of which #{item.tax}%, #{formatGivenNumber(Math.round((multiPrice/(100+item.tax))*item.tax), 'EUR')} is tax.]
      else
        -totalPrice += item.price;
        p. 
          #{alt}
          by #{producer} for: #[b #{formatGivenNumber(item.price, 'EUR')}] 
          #[em Of which #{item.tax}%, #{formatGivenNumber(Math.round((item.price/(100+item.tax))*item.tax), 'EUR')} is tax.]
      -if(item['image links'] && item['image links'].length > 0)
        -if (process.env.NODE_ENV === "development")
            -//adds potterytest, removes leading slashes
            img(src="http://localhost:8080/"+item['image links'][0].replace(/^\/+/g, '') alt="An image of a " + name + " in " + themename).thumbnail
        -if (process.env.NODE_ENV === "production") 
            img(src="/"+item['image links'][0] alt="An image of a " + name + " in " + themename).thumbnail
      .break
      .btngrey.removeFromCart(data-itemref=item.itemref) remove  
      .break

mixin bespoke(fullData, i)
  
  each item in fullData.items
    -let title = (item.theme) ? item.theme.split('-')[0] : ' your chosen theme';
    -let colours = (item.colours) ? item.colours.join(', ') : ' your chosen colours ';
    -totalPrice += item.price;
      p.
        Custom #{item.itemtype} with the #{item.theme} theme   
        for: #[b #{formatGivenNumber(item.price, 'EUR')}]
        #[em Of which #{item.tax}%, #{formatGivenNumber(Math.round((item.price/(100+item.tax))*item.tax), 'EUR')} is tax.]
      -//img(src=item['image links'][0] alt=alt).thumbnail
      .break  
      .btngrey.removeFromCart(data-itemref=item.itemref) remove      
      .break

-{stock, shipping}
-let totalPrice = 0;
.itemModal.modal#cartcode(data-cartcode=stock[0].cart.cartcode)
  .modalContent.itemGroupColumn
    .fullrowTopRight
      .circle.sms2.circleClose
        .before
        .after
    .fullrowTopRight    
      if stock.length === 1 
        h3 Your selection:  
      else
        h3 Your chosen items:
    .buttonContainer  
      if stock
        each fullData, i in stock

          if fullData.items[0].bespoke
            +bespoke(fullData, i)
          else  
            +normal(fullData, i)
      else
        h2 Choosen your items at in the  
          a(href='./shop') shop 
      if shipping
        -let country = shipping.country;
        -let price = shipping.price;
        -totalPrice += price
        -let vat = shipping.vat;
        .break
        p.
          #[b.estelica.shippingDestinationLabel Shipping cost:] 
          to #{country} is #[b #{formatGivenNumber(price, 'EUR')}]
          #[em Of which #{vat}%, #{formatGivenNumber(Math.round((price/(100+vat))*vat), 'EUR')} is tax. Price includes labour, insurance, packaging and excise duty where applicaple.]
          The items you have in your cart weigh about #[b #{shipping.currentWeight}] grams, you can add #[b #{shipping.weightLeft}] grams before incurring extra shipping costs.
        .break
        b.estelica.shippingDestinationLabel Change shipping destination: 
        include ../../includes/countrylist.pug
            
      else  
          .standardBoxShipping
            b.estelica.shippingDestinationLabel Choose your shipping destination: 
          include ../../includes/countrylist.pug
      .standardBoxShipping
        p.
          #[b.estelica.shippingDestinationLabel Grand total: ]
          #{formatGivenNumber(totalPrice, 'EUR')}
      .standardBoxShipping
        .timer
    .fullrowBottom
      .yestick
        //a(href='/checkout')
      .bigYellowBtn.toCheckoutBtn.center
        h2 Checkout
